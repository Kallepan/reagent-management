# Generated by Django 4.2.6 on 2023-10-31 13:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("bak", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": 'bak"."location',
            },
        ),
        migrations.CreateModel(
            name="Lot",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=50)),
                ("valid_from", models.DateField(blank=True, null=True)),
                ("valid_until", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("created_by", models.CharField(max_length=100)),
                ("in_use_from", models.DateField(blank=True, null=True)),
                ("in_use_until", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": 'bak"."lot',
            },
        ),
        migrations.CreateModel(
            name="Type",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=50)),
                ("producer", models.CharField(db_index=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": 'bak"."type',
                "index_together": {("name", "producer")},
            },
        ),
        migrations.CreateModel(
            name="Reagent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        db_index=True,
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_by", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reagents",
                        to="bak.location",
                    ),
                ),
                (
                    "lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reagents",
                        to="bak.lot",
                    ),
                ),
            ],
            options={
                "db_table": 'bak"."reagent',
            },
        ),
        migrations.AddField(
            model_name="lot",
            name="location_set",
            field=models.ManyToManyField(through="bak.Reagent", to="bak.location"),
        ),
        migrations.AddField(
            model_name="lot",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lots",
                to="bak.type",
            ),
        ),
        migrations.AddConstraint(
            model_name="reagent",
            constraint=models.UniqueConstraint(
                fields=("location", "lot"), name="unique_reagent"
            ),
        ),
        migrations.AlterIndexTogether(
            name="reagent",
            index_together={("location", "lot")},
        ),
        migrations.AddConstraint(
            model_name="lot",
            constraint=models.UniqueConstraint(
                fields=("name", "type"), name="unique_lot"
            ),
        ),
        migrations.AddConstraint(
            model_name="lot",
            constraint=models.CheckConstraint(
                check=models.Q(("valid_from__lte", models.F("valid_until"))),
                name="valid_from_before_valid_until",
            ),
        ),
        migrations.AddConstraint(
            model_name="lot",
            constraint=models.CheckConstraint(
                check=models.Q(("in_use_from__lte", models.F("in_use_until"))),
                name="in_use_from_before_in_use_until",
            ),
        ),
        migrations.AlterIndexTogether(
            name="lot",
            index_together={("name", "type")},
        ),
    ]
